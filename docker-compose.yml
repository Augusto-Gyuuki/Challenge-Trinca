version: '3.4'

services:
  challenge.trinca.web:
    image: ${DOCKER_REGISTRY-}challengetrincaweb
    build:
      context: .
      dockerfile: Challenge.Trinca.Web/Dockerfile
    networks:
      - elastic

  seq:
    image: datalust/seq:latest
    hostname: seq
    container_name: seq
    volumes:
      - data01:/usr/share/seq/data
    environment:
      - ACCEPT_EULA=Y
    networks:
      - elastic
    ports:
      - "5341:80"

  azure.cosmosdb:
      container_name: azure.cosmosdb
      hostname: azure.cosmosdb
      image: "mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator"
      tty: true
      restart: always
      mem_limit: 2G
      cpu_count: 2
      environment:
        - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=10
        - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
      ports:
        - "8081:8081"
      volumes:
        - data01:/usr/share/cosmos/data
      networks:
       - elastic

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
    
  kib01:
    image: docker.elastic.co/kibana/kibana:7.12.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic

networks:
  elastic:
   driver: bridge

volumes:
  data01:
    driver: local